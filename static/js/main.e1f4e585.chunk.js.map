{"version":3,"sources":["services/service.js","components/GalleryModal/GalleryModal.js","components/GalleryModal/index.js","components/Button/Button.js","components/Button/index.js","components/Album/Album.js","components/Album/index.js","components/ErrorIndicator/index.js","components/ErrorIndicator/ErrorIndicator.js","components/App/index.js","components/App/App.js","index.js"],"names":["FakeApiService","_baseUrl","_imgUrls","_addCoverImage","item","url","fetch","this","response","json","body","status","Error","userId","getResource","albums","Promise","all","map","a","album","index","_transformAlbum","albumProps","albumId","photos","length","getCountPhotos","id","count","title","src","countPhotos","GalleryModal","handleKeyDown","e","keyCode","props","closeModal","hasPrevPhoto","findPrevPhoto","hasNextPhoto","findNextPhoto","handleClickOutsideModal","target","matches","document","addEventListener","removeEventListener","className","onClick","alt","href","onKeyDown","Component","defaultProps","Button","text","onAction","Album","data","closeAlbum","images","onClose","Tiles","arr","image","tiles","renderImageContent","Fragment","Tile","state","isOpen","mouseOver","mouseEnter","preventDefault","setState","mouseLeave","clickHandler","tileStyle","documentElement","clientWidth","position","left","width","height","margin","marginLeft","boxShadow","transform","onMouseEnter","onMouseLeave","style","ErrorIndicator","App","_userId","currentPhotoIndex","isOpenModal","isOpenAlbum","error","fakeApiService","updateAlbumTiles","getAllAlbums","then","catch","updatePhotosList","getAllPhotos","updateCountPhotos","openAlbum","openModal","errorMessage","albumItems","renderAlbumTiles","modal","albumTiles","ReactDOM","render","StrictMode","querySelector"],"mappings":"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","file":"static/js/main.e1f4e585.chunk.js","sourcesContent":["export default class FakeApiService {\r\n  _baseUrl = 'https://jsonplaceholder.typicode.com';\r\n\r\n  // обложки для альбомов\r\n  _imgUrls = [\r\n    'https://source.unsplash.com/PC_lbSSxCZE/800x600',\r\n    'https://source.unsplash.com/lVmR1YaBGG4/800x600',\r\n    'https://source.unsplash.com/5KvPQc1Uklk/800x600',\r\n    'https://source.unsplash.com/GtYFwFrFbMA/800x600',\r\n    'https://source.unsplash.com/Igct8iZucFI/800x600',\r\n    'https://source.unsplash.com/M01DfkOqz7I/800x600',\r\n    'https://source.unsplash.com/MoI_cHNcSK8/800x600',\r\n    'https://source.unsplash.com/M0WbGFRTXqU/800x600',\r\n    'https://source.unsplash.com/s48nn4NtlZ4/800x600',\r\n    'https://source.unsplash.com/E4944K_4SvI/800x600',\r\n  ];\r\n\r\n  // получение данных по API\r\n  async getResource(url) {\r\n    const response = await fetch(`${this._baseUrl}${url}`);\r\n    const body = await response.json();\r\n\r\n    if (response.status !== 200) {\r\n      throw new Error(\r\n        `Could not fetch ${url}. Recieved status code ${response.status}`\r\n      );\r\n    }\r\n\r\n    return body;\r\n  }\r\n\r\n  // получение всех альбомов конкретного юзера\r\n  async getAllAlbums(userId) {\r\n    const albums = await this.getResource(`/users/${userId}/albums`);\r\n    const albumProps = await Promise.all(\r\n      albums.map(\r\n        async (album, index) => await this._transformAlbum(album, index)\r\n      )\r\n    );\r\n    return albumProps; // [{}, {}...]\r\n  }\r\n\r\n  // получение всех фотографий конкретного альбома\r\n  async getAllPhotos(albumId) {\r\n    const photos = await this.getResource(`/albums/${albumId}/photos`);\r\n    return photos; // [{}, {}...]\r\n  }\r\n\r\n  // получение количества фотографий в альбоме\r\n  async getCountPhotos(albumId) {\r\n    const photos = await this.getResource(`/albums/${albumId}/photos`);\r\n    return photos.length;\r\n  }\r\n\r\n  // добавление обложки альбома\r\n  _addCoverImage = item => this._imgUrls[item];\r\n\r\n  async _transformAlbum(album, index) {\r\n    const count = await this.getCountPhotos(album.id);\r\n    return {\r\n      userId: album.userId,\r\n      id: album.id,\r\n      title: album.title,\r\n      src: this._addCoverImage(index),\r\n      countPhotos: count,\r\n    };\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './GalleryModal.scss';\r\n\r\nexport default class GalleryModal extends Component {\r\n  componentDidMount() {\r\n    document.body.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnMount() {\r\n    document.body.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.keyCode === 27) this.props.closeModal();\r\n    if (e.keyCode === 37 && this.props.hasPrevPhoto) {\r\n      this.props.findPrevPhoto(e);\r\n    }\r\n    if (e.keyCode === 39 && this.props.hasNextPhoto) {\r\n      this.props.findNextPhoto(e);\r\n    }\r\n  };\r\n\r\n  handleClickOutsideModal = e => {\r\n    if (e.target.matches('.modal-overlay')) {\r\n      this.props.closeModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      closeModal,\r\n      findPrevPhoto,\r\n      findNextPhoto,\r\n      hasPrevPhoto,\r\n      hasNextPhoto,\r\n      src,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"modal-overlay\" onClick={this.handleClickOutsideModal}>\r\n        <div className=\"modal-window\">\r\n          <div className=\"modal-body\">\r\n            <img src={src} alt=\"Image: Fake photo\" />\r\n            <a\r\n              href=\"#\"\r\n              className=\"modal-close\"\r\n              onClick={closeModal}\r\n              onKeyDown={this.handleKeyDown}\r\n            >\r\n              &times;\r\n            </a>\r\n            {hasPrevPhoto && (\r\n              <a\r\n                href=\"#\"\r\n                className=\"modal-prev\"\r\n                onClick={findPrevPhoto}\r\n                onKeyDown={this.handleKeyDown}\r\n              >\r\n                &lsaquo;\r\n              </a>\r\n            )}\r\n            {hasNextPhoto && (\r\n              <a\r\n                href=\"#\"\r\n                className=\"modal-next\"\r\n                onClick={findNextPhoto}\r\n                onKeyDown={this.handleKeyDown}\r\n              >\r\n                &rsaquo;\r\n              </a>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nGalleryModal.propTypes = {\r\n  closeModal: PropTypes.func.isRequired,\r\n  findPrevPhoto: PropTypes.func.isRequired,\r\n  findNextPhoto: PropTypes.func.isRequired,\r\n  hasPrevPhoto: PropTypes.bool.isRequired,\r\n  hasNextPhoto: PropTypes.bool.isRequired,\r\n  loading: PropTypes.bool,\r\n  src: PropTypes.string,\r\n};\r\n\r\nGalleryModal.defaultProps = {\r\n  src: 'https://via.placeholder.com/600/92c952',\r\n};\r\n","import GalleryModal from './GalleryModal';\r\n\r\nexport default GalleryModal;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Button.scss';\r\n\r\nexport default class Button extends Component {\r\n  render() {\r\n    const { text, onAction } = this.props;\r\n    return (\r\n      <button className=\"gallery-button\" onClick={onAction}>\r\n        {text}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  onAction: PropTypes.func.isRequired,\r\n};\r\n\r\nButton.defaultProps = {\r\n  text: 'Click me!',\r\n};\r\n","import Button from './Button';\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '../Button';\r\nimport './Album.scss';\r\n\r\nexport default class Album extends Component {\r\n  render() {\r\n    const { data, closeAlbum } = this.props;\r\n    return <Tiles images={data} onClose={closeAlbum} />;\r\n  }\r\n}\r\n\r\n// плитка фотографий + кнопка \"Back\"\r\nclass Tiles extends Component {\r\n  renderImageContent(arr) {\r\n    if (arr) {\r\n      return arr.map(({ url, id }) => <Tile image={url} key={id} />);\r\n    }\r\n  }\r\n  render() {\r\n    const { images, onClose } = this.props;\r\n    const tiles = this.renderImageContent(images);\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"back-button\">\r\n          <Button text={'Back'} onAction={onClose} />\r\n        </div>\r\n        <section className=\"tiles\">{tiles}</section>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// фотография\r\nclass Tile extends Component {\r\n  state = {\r\n    isOpen: false,\r\n    mouseOver: false,\r\n  };\r\n\r\n  mouseEnter = e => {\r\n    e.preventDefault();\r\n    if (!this.state.mouseOver) {\r\n      this.setState({\r\n        mouseOver: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  mouseLeave = e => {\r\n    e.preventDefault();\r\n    if (this.state.mouseOver) {\r\n      this.setState({\r\n        mouseOver: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickHandler = e => {\r\n    e.preventDefault();\r\n    if (!this.state.isOpen) {\r\n      this.setState({\r\n        isOpen: true,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isOpen: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  render() {\r\n    // url\r\n    const { image } = this.props;\r\n\r\n    // стили при нажатии на фотографию\r\n    let tileStyle = {};\r\n\r\n    if (this.state.isOpen && document.documentElement.clientWidth > 780) {\r\n      tileStyle = {\r\n        position: 'absolute',\r\n        left: '50%',\r\n        width: '50vw',\r\n        height: '40vw',\r\n        margin: '0',\r\n        marginLeft: '-25vw',\r\n        boxShadow: '0 0 40px 5px rgba(0, 0, 0, 0.3)',\r\n        transform: 'none',\r\n      };\r\n    } else {\r\n      tileStyle = {\r\n        width: '100%',\r\n        height: '100%',\r\n      };\r\n    }\r\n\r\n    return (\r\n      <div className=\"tile\">\r\n        <img\r\n          onMouseEnter={this.mouseEnter}\r\n          onMouseLeave={this.mouseLeave}\r\n          onClick={this.clickHandler}\r\n          src={image}\r\n          alt=\"Image: Fake photo\"\r\n          style={tileStyle}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAlbum.propTypes = {\r\n  closeAlbum: PropTypes.func.isRequired,\r\n  data: PropTypes.array,\r\n};\r\n\r\nTiles.propTypes = {\r\n  images: PropTypes.array,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nTile.propTypes = {\r\n  image: PropTypes.string,\r\n};\r\n\r\nTile.defaultProps = {\r\n  image: 'https://via.placeholder.com/600/92c952',\r\n};\r\n","import Album from './Album';\r\n\r\nexport default Album;\r\n","import ErrorIndicator from './ErrorIndicator';\r\n\r\nexport default ErrorIndicator;\r\n","import React from 'react';\r\nimport './ErrorIndicator.scss';\r\n\r\nconst ErrorIndicator = () => (\r\n  <div className=\"error-indicator\">\r\n    <div className=\"loadingio-spinner-magnify-xvi2eomm9dk\">\r\n      <div className=\"ldio-djr5te9pz2p\">\r\n        <div>\r\n          <div>\r\n            <div></div>\r\n            <div></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"error-message\">\r\n      <div>Something has gone wrong!</div>\r\n      <div>(but we already sent our developers to fix it)</div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default ErrorIndicator;\r\n","import App from './App';\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport FakeApiService from '../../services/service';\r\nimport GalleryModal from '../GalleryModal';\r\nimport Album from '../Album';\r\nimport Button from '../Button';\r\nimport ErrorIndicator from '../ErrorIndicator';\r\nimport './App.scss';\r\n\r\nexport default class App extends Component {\r\n  _userId = 1;\r\n\r\n  state = {\r\n    albums: null,\r\n    photos: null,\r\n    countPhotos: null,\r\n    currentPhotoIndex: null,\r\n    isOpenModal: false,\r\n    isOpenAlbum: false,\r\n    error: null,\r\n  };\r\n\r\n  fakeApiService = new FakeApiService();\r\n\r\n  // обновляем плитку альбомов\r\n  updateAlbumTiles = () => {\r\n    this.fakeApiService\r\n      .getAllAlbums(this._userId)\r\n      .then(albums => this.setState({ albums }))\r\n      .catch(() => this.setState({ error: true }));\r\n  };\r\n\r\n  // обновляем список фотографий альбома\r\n  updatePhotosList = albumId => {\r\n    this.fakeApiService\r\n      .getAllPhotos(albumId)\r\n      .then(photos => this.setState({ photos }))\r\n      .catch(() => this.setState({ error: true }));\r\n  };\r\n\r\n  // обновляем количество фотографий в альбоме\r\n  updateCountPhotos = albumId => {\r\n    this.fakeApiService\r\n      .getCountPhotos(albumId)\r\n      .then(count => this.setState({ countPhotos: count }))\r\n      .catch(() => this.setState({ error: true }));\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updateAlbumTiles();\r\n  }\r\n\r\n  // рендер плитки альбомов\r\n  renderAlbumTiles(tiles) {\r\n    if (tiles) {\r\n      return tiles.map(({ src, id, title, countPhotos }) => (\r\n        <div className=\"album\" key={id}>\r\n          <img\r\n            className=\"cover-image\"\r\n            src={src}\r\n            key={id}\r\n            alt=\"Image: cover image\"\r\n          />\r\n          <div className=\"album-info\">\r\n            <span>\r\n              <strong>Album: </strong>\r\n              {title}\r\n            </span>\r\n            <span>\r\n              <strong>Count: </strong>\r\n              {countPhotos}\r\n            </span>\r\n          </div>\r\n          <div className=\"button-block\">\r\n            <Button text={'Аlbum'} onAction={() => this.openAlbum(id)} />\r\n            <Button text={'Preview'} onAction={() => this.openModal(id)} />\r\n          </div>\r\n        </div>\r\n      ));\r\n    }\r\n  }\r\n\r\n  // функция открытия альбома\r\n  openAlbum = id => {\r\n    this.updatePhotosList(id);\r\n    this.setState({ isOpenAlbum: true });\r\n  };\r\n\r\n  // функция открытия модального окна\r\n  openModal = id => {\r\n    this.updatePhotosList(id);\r\n    this.setState({\r\n      currentPhotoIndex: id,\r\n      isOpenModal: true,\r\n    });\r\n  };\r\n\r\n  // функция закрытия альбома\r\n  closeAlbum = () => {\r\n    this.setState({\r\n      photos: null,\r\n      isOpenAlbum: false,\r\n    });\r\n  };\r\n\r\n  // функция закрытия модального окна\r\n  closeModal = () => {\r\n    this.setState({\r\n      photos: null,\r\n      isOpenModal: false,\r\n    });\r\n  };\r\n\r\n  // функция перелистывания фотографий назад\r\n  findPrevPhoto = e => {\r\n    e.preventDefault();\r\n    this.setState(({ currentPhotoIndex }) => ({\r\n      currentPhotoIndex: currentPhotoIndex - 1,\r\n    }));\r\n  };\r\n\r\n  // функция перелистывания фотографий вперед\r\n  findNextPhoto = e => {\r\n    e.preventDefault();\r\n    this.setState(({ currentPhotoIndex }) => ({\r\n      currentPhotoIndex: currentPhotoIndex + 1,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      albums,\r\n      photos,\r\n      currentPhotoIndex,\r\n      isOpenModal,\r\n      isOpenAlbum,\r\n      error,\r\n    } = this.state;\r\n\r\n    // сообщение об ошибке\r\n    const errorMessage = error ? <ErrorIndicator /> : null;\r\n\r\n    // массив всех альбомов пользователя\r\n    const albumItems = this.renderAlbumTiles(albums);\r\n\r\n    // модальное окно со всеми фотографиями альбома\r\n    const modal =\r\n      isOpenModal && photos ? (\r\n        <GalleryModal\r\n          closeModal={this.closeModal}\r\n          findPrevPhoto={this.findPrevPhoto}\r\n          findNextPhoto={this.findNextPhoto}\r\n          hasPrevPhoto={currentPhotoIndex > 1}\r\n          hasNextPhoto={currentPhotoIndex + 1 < photos.length}\r\n          src={photos[currentPhotoIndex].url}\r\n        />\r\n      ) : null;\r\n\r\n    // содержимое альбома со всеми фотографиями\r\n    const album =\r\n      isOpenAlbum && photos ? (\r\n        <Album closeAlbum={this.closeAlbum} data={photos} />\r\n      ) : null;\r\n\r\n    // плитка со всеми альбомами пользователя\r\n    const albumTiles = !isOpenAlbum ? (\r\n      <React.Fragment>\r\n        <h1>Photo Gallery</h1>\r\n        <section className=\"gallery-grid\">{albumItems}</section>\r\n        {modal}\r\n      </React.Fragment>\r\n    ) : null;\r\n\r\n    return (\r\n      <section className=\"gallery-container\">\r\n        {albumTiles}\r\n        {album}\r\n        {errorMessage}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.querySelector('.gallery')\r\n);\r\n"],"sourceRoot":""}