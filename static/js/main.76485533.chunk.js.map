{"version":3,"sources":["services/service.js","components/GalleryModal/GalleryModal.js","components/GalleryModal/index.js","components/Button/Button.js","components/Button/index.js","components/Album/Album.js","components/Album/index.js","components/ErrorIndicator/index.js","components/ErrorIndicator/ErrorIndicator.js","components/App/index.js","components/App/App.js","index.js"],"names":["FakeApiService","_baseUrl","_imgUrls","_addCoverImage","item","url","fetch","this","response","json","body","status","Error","userId","getResource","albums","Promise","all","map","a","album","index","_transformAlbum","albumProps","albumId","photos","length","getCountPhotos","id","count","title","src","countPhotos","GalleryModal","handleKeyDown","e","keyCode","props","closeModal","handleClickOutsideModal","target","matches","document","addEventListener","removeEventListener","findPrevPhoto","findNextPhoto","hasPrevPhoto","hasNextPhoto","className","onClick","alt","href","onKeyDown","Component","defaultProps","Button","text","onAction","Album","data","closeAlbum","openModal","images","onClose","onOpen","Tiles","arr","image","tiles","renderImageContent","Fragment","Tile","state","mouseOver","mouseEnter","preventDefault","setState","mouseLeave","clickHandler","onMouseEnter","onMouseLeave","ErrorIndicator","App","_userId","currentPhotoIndex","isOpenModal","isOpenAlbum","error","fakeApiService","updateAlbumTiles","getAllAlbums","then","catch","updatePhotosList","getAllPhotos","updateCountPhotos","openAlbum","openModalInsideAlbum","errorMessage","albumItems","renderAlbumTiles","modal","albumTiles","ReactDOM","render","StrictMode","querySelector"],"mappings":"iUAAqBA,E,4DACnBC,SAAW,uC,KAGXC,SAAW,CACT,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,kDACA,mD,KAyCFC,eAAiB,SAAAC,GAAI,OAAI,EAAKF,SAASE,I,iGArCrBC,G,yFACOC,MAAM,GAAD,OAAIC,KAAKN,UAAT,OAAoBI,I,cAA1CG,E,gBACaA,EAASC,O,UAAtBC,E,OAEkB,MAApBF,EAASG,O,sBACL,IAAIC,MAAJ,0BACeP,EADf,kCAC4CG,EAASG,S,gCAItDD,G,mLAIUG,G,gGACIN,KAAKO,YAAL,iBAA2BD,EAA3B,Y,cAAfE,E,gBACmBC,QAAQC,IAC/BF,EAAOG,IAAP,+BAAAC,EAAA,MACE,WAAOC,EAAOC,GAAd,SAAAF,EAAA,sEAA8B,EAAKG,gBAAgBF,EAAOC,GAA1D,mFADF,0D,cADIE,E,yBAKCA,G,mLAIUC,G,uFACIjB,KAAKO,YAAL,kBAA4BU,EAA5B,Y,cAAfC,E,yBACCA,G,qLAIYD,G,uFACEjB,KAAKO,YAAL,kBAA4BU,EAA5B,Y,cAAfC,E,yBACCA,EAAOC,Q,sLAMMN,EAAOC,G,uFACPd,KAAKoB,eAAeP,EAAMQ,I,cAAxCC,E,yBACC,CACLhB,OAAQO,EAAMP,OACde,GAAIR,EAAMQ,GACVE,MAAOV,EAAMU,MACbC,IAAKxB,KAAKJ,eAAekB,GACzBW,YAAaH,I,gHC5DEI,G,kNASnBC,cAAgB,SAAAC,GACI,KAAdA,EAAEC,SAAgB,EAAKC,MAAMC,c,EAGnCC,wBAA0B,SAAAJ,GACpBA,EAAEK,OAAOC,QAAQ,mBACnB,EAAKJ,MAAMC,c,kEAbbI,SAAShC,KAAKiC,iBAAiB,UAAWpC,KAAK2B,iB,6CAI/CQ,SAAShC,KAAKkC,oBAAoB,UAAWrC,KAAK2B,iB,+BAa1C,IAAD,EAQH3B,KAAK8B,MANPC,EAFK,EAELA,WACAO,EAHK,EAGLA,cACAC,EAJK,EAILA,cACAC,EALK,EAKLA,aACAC,EANK,EAMLA,aACAjB,EAPK,EAOLA,IAGF,OACE,qBAAKkB,UAAU,gBAAgBC,QAAS3C,KAAKgC,wBAA7C,SACE,qBAAKU,UAAU,eAAf,SACE,sBAAKA,UAAU,aAAf,UACE,qBAAKlB,IAAKA,EAAKoB,IAAI,sBACnB,mBACEC,KAAK,IACLH,UAAU,cACVC,QAASZ,EACTe,UAAW9C,KAAK2B,cAJlB,kBAQCa,GACC,mBACEK,KAAK,IACLH,UAAU,aACVC,QAASL,EAHX,oBAQDG,GACC,mBACEI,KAAK,IACLH,UAAU,aACVC,QAASJ,EAHX,+B,GApD4BQ,cA4E1CrB,EAAasB,aAAe,CAC1BxB,IAAK,0CC/EQE,QCEMuB,G,6KACT,IAAD,EACoBjD,KAAK8B,MAAxBoB,EADD,EACCA,KAAMC,EADP,EACOA,SACd,OACE,wBAAQT,UAAU,iBAAiBC,QAASQ,EAA5C,SACGD,Q,GAL2BH,cAgBpCE,EAAOD,aAAe,CACpBE,KAAM,aCnBOD,QCGMG,G,6KACT,IAAD,EACiCpD,KAAK8B,MAArCuB,EADD,EACCA,KAAMC,EADP,EACOA,WAAYC,EADnB,EACmBA,UAC1B,OAAO,cAAC,EAAD,CAAOC,OAAQH,EAAMI,QAASH,EAAYI,OAAQH,Q,GAH1BR,cAQ7BY,E,iLACeC,GAAM,IAAD,OACtB,GAAIA,EACF,OAAOA,EAAIjD,KAAI,WAAcG,GAAd,IAAGhB,EAAH,EAAGA,IAAKuB,EAAR,EAAQA,GAAR,OACb,cAAC,EAAD,CAAMwC,MAAO/D,EAAcuB,GAAIP,EAAO4C,OAAQ,EAAK5B,MAAM4B,QAAlCrC,Q,+BAInB,IAAD,EACqBrB,KAAK8B,MAAzB0B,EADD,EACCA,OAAQC,EADT,EACSA,QACVK,EAAQ9D,KAAK+D,mBAAmBP,GACtC,OACE,eAAC,IAAMQ,SAAP,WACE,qBAAKtB,UAAU,cAAf,SACE,cAAC,EAAD,CAAQQ,KAAM,OAAQC,SAAUM,MAElC,yBAASf,UAAU,QAAnB,SAA4BoB,W,GAhBhBf,aAuBdkB,E,4MACJC,MAAQ,CACNC,WAAW,G,EAGbC,WAAa,SAAAxC,GACXA,EAAEyC,iBACG,EAAKH,MAAMC,WACd,EAAKG,SAAS,CACZH,WAAW,K,EAKjBI,WAAa,SAAA3C,GACXA,EAAEyC,iBACE,EAAKH,MAAMC,WACb,EAAKG,SAAS,CACZH,WAAW,K,EAKjBK,aAAe,SAAA5C,GACbA,EAAEyC,iBACF,EAAKvC,MAAM4B,OAAO,EAAK5B,MAAMT,K,uDAGrB,IACAwC,EAAU7D,KAAK8B,MAAf+B,MAER,OACE,qBAAKnB,UAAU,OAAf,SACE,qBACE+B,aAAczE,KAAKoE,WACnBM,aAAc1E,KAAKuE,WACnB5B,QAAS3C,KAAKwE,aACdhD,IAAKqC,EACLjB,IAAI,4B,GAtCKG,aA+DnBkB,EAAKjB,aAAe,CAClBa,MAAO,0CClGMT,QCAAuB,G,MCCQ,kBACrB,sBAAKjC,UAAU,kBAAf,UACE,qBAAKA,UAAU,wCAAf,SACE,qBAAKA,UAAU,mBAAf,SACE,8BACE,gCACE,wBACA,iCAKR,sBAAKA,UAAU,gBAAf,UACE,4DACA,yFCfSkC,G,kNCObC,QAAU,E,EAEVX,MAAQ,CACN1D,OAAQ,KACRU,OAAQ,KACRO,YAAa,KACbqD,kBAAmB,KACnBC,aAAa,EACbC,aAAa,EACbC,MAAO,M,EAGTC,eAAiB,IAAIzF,E,EAGrB0F,iBAAmB,WACjB,EAAKD,eACFE,aAAa,EAAKP,SAClBQ,MAAK,SAAA7E,GAAM,OAAI,EAAK8D,SAAS,CAAE9D,cAC/B8E,OAAM,kBAAM,EAAKhB,SAAS,CAAEW,OAAO,Q,EAIxCM,iBAAmB,SAAAtE,GACjB,EAAKiE,eACFM,aAAavE,GACboE,MAAK,SAAAnE,GAAM,OAAI,EAAKoD,SAAS,CAAEpD,cAC/BoE,OAAM,kBAAM,EAAKhB,SAAS,CAAEW,OAAO,Q,EAIxCQ,kBAAoB,SAAAxE,GAClB,EAAKiE,eACF9D,eAAeH,GACfoE,MAAK,SAAA/D,GAAK,OAAI,EAAKgD,SAAS,CAAE7C,YAAaH,OAC3CgE,OAAM,kBAAM,EAAKhB,SAAS,CAAEW,OAAO,Q,EAsCxCS,UAAY,SAAArE,GACV,EAAKkE,iBAAiBlE,GACtB,EAAKiD,SAAS,CACZU,aAAa,K,EAKjBzB,UAAY,SAAAlC,GACV,EAAKkE,iBAAiBlE,GACtB,EAAKiD,SAAS,CACZQ,kBAAmBzD,EACnB0D,aAAa,K,EAKjBY,qBAAuB,SAAAtE,GACrB,EAAKiD,SAAS,CACZQ,kBAAmBzD,EACnB0D,aAAa,K,EAKjBzB,WAAa,WACX,EAAKgB,SAAS,CACZpD,OAAQ,KACR4D,kBAAmB,KACnBE,aAAa,K,EAKjBjD,WAAa,WACX,EAAKuC,SAAS,CACZS,aAAa,K,EAKjBzC,cAAgB,SAAAV,GACdA,EAAEyC,iBACF,EAAKC,UAAS,kBAA4B,CACxCQ,kBADY,EAAGA,kBACwB,O,EAK3CvC,cAAgB,SAAAX,GACdA,EAAEyC,iBACF,EAAKC,UAAS,kBAA4B,CACxCQ,kBADY,EAAGA,kBACwB,O,kEAtFzC9E,KAAKmF,qB,uCAIUrB,GAAQ,IAAD,OACtB,GAAIA,EACF,OAAOA,EAAMnD,KAAI,gBAAGa,EAAH,EAAGA,IAAKH,EAAR,EAAQA,GAAIE,EAAZ,EAAYA,MAAOE,EAAnB,EAAmBA,YAAnB,OACf,sBAAKiB,UAAU,QAAf,UACE,qBACEA,UAAU,cACVlB,IAAKA,EAELoB,IAAI,sBADCvB,GAGP,sBAAKqB,UAAU,aAAf,UACE,iCACE,6CACCnB,KAEH,iCACE,6CACCE,QAGL,sBAAKiB,UAAU,eAAf,UACE,cAAC,EAAD,CAAQQ,KAAM,aAASC,SAAU,kBAAM,EAAKuC,UAAUrE,MACtD,cAAC,EAAD,CAAQ6B,KAAM,UAAWC,SAAU,kBAAM,EAAKI,UAAUlC,WAnBhCA,Q,+BAmFxB,IAAD,EAQHrB,KAAKkE,MANP1D,EAFK,EAELA,OACAU,EAHK,EAGLA,OACA4D,EAJK,EAILA,kBACAC,EALK,EAKLA,YACAC,EANK,EAMLA,YAKIY,EAXC,EAOLX,MAI2B,cAAC,EAAD,IAAqB,KAG5CY,EAAa7F,KAAK8F,iBAAiBtF,GAGnCuF,EACJhB,GAAe7D,EACb,cAAC,EAAD,CACEa,WAAY/B,KAAK+B,WACjBO,cAAetC,KAAKsC,cACpBC,cAAevC,KAAKuC,cACpBC,aAAcsC,EAAoB,EAClCrC,aAAcqC,EAAoB,EAAI5D,EAAOC,OAC7CK,IAAKN,EAAO4D,GAAmBhF,MAE/B,KAGAe,EACJmE,GAAe9D,EACb,eAAC,IAAM8C,SAAP,WACE,cAAC,EAAD,CACEV,WAAYtD,KAAKsD,WACjBC,UAAWvD,KAAK2F,qBAChBtC,KAAMnC,IAEP6E,KAED,KAGAC,EAAchB,EAMhB,KALF,eAAC,IAAMhB,SAAP,WACE,+CACA,yBAAStB,UAAU,eAAnB,SAAmCmD,IAClCE,KAIL,OACE,0BAASrD,UAAU,oBAAnB,UACGsD,EACAnF,EACA+E,S,GAzLwB7C,cCJjCkD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhE,SAASiE,cAAc,e","file":"static/js/main.76485533.chunk.js","sourcesContent":["export default class FakeApiService {\r\n  _baseUrl = 'https://jsonplaceholder.typicode.com';\r\n\r\n  // обложки для альбомов\r\n  _imgUrls = [\r\n    'https://source.unsplash.com/PC_lbSSxCZE/800x600',\r\n    'https://source.unsplash.com/lVmR1YaBGG4/800x600',\r\n    'https://source.unsplash.com/5KvPQc1Uklk/800x600',\r\n    'https://source.unsplash.com/GtYFwFrFbMA/800x600',\r\n    'https://source.unsplash.com/Igct8iZucFI/800x600',\r\n    'https://source.unsplash.com/M01DfkOqz7I/800x600',\r\n    'https://source.unsplash.com/MoI_cHNcSK8/800x600',\r\n    'https://source.unsplash.com/M0WbGFRTXqU/800x600',\r\n    'https://source.unsplash.com/s48nn4NtlZ4/800x600',\r\n    'https://source.unsplash.com/E4944K_4SvI/800x600',\r\n  ];\r\n\r\n  // получение данных по API\r\n  async getResource(url) {\r\n    const response = await fetch(`${this._baseUrl}${url}`);\r\n    const body = await response.json();\r\n\r\n    if (response.status !== 200) {\r\n      throw new Error(\r\n        `Could not fetch ${url}. Recieved status code ${response.status}`\r\n      );\r\n    }\r\n\r\n    return body;\r\n  }\r\n\r\n  // получение всех альбомов конкретного пользователя\r\n  async getAllAlbums(userId) {\r\n    const albums = await this.getResource(`/users/${userId}/albums`);\r\n    const albumProps = await Promise.all(\r\n      albums.map(\r\n        async (album, index) => await this._transformAlbum(album, index)\r\n      )\r\n    );\r\n    return albumProps; // [{}, {}...]\r\n  }\r\n\r\n  // получение всех фотографий конкретного альбома\r\n  async getAllPhotos(albumId) {\r\n    const photos = await this.getResource(`/albums/${albumId}/photos`);\r\n    return photos; // [{}, {}...]\r\n  }\r\n\r\n  // получение количества фотографий в альбоме\r\n  async getCountPhotos(albumId) {\r\n    const photos = await this.getResource(`/albums/${albumId}/photos`);\r\n    return photos.length;\r\n  }\r\n\r\n  // добавление обложки альбома\r\n  _addCoverImage = item => this._imgUrls[item];\r\n\r\n  async _transformAlbum(album, index) {\r\n    const count = await this.getCountPhotos(album.id);\r\n    return {\r\n      userId: album.userId,\r\n      id: album.id,\r\n      title: album.title,\r\n      src: this._addCoverImage(index),\r\n      countPhotos: count,\r\n    };\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './GalleryModal.scss';\r\n\r\nexport default class GalleryModal extends Component {\r\n  componentDidMount() {\r\n    document.body.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnMount() {\r\n    document.body.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  handleKeyDown = e => {\r\n    if (e.keyCode === 27) this.props.closeModal();\r\n  };\r\n\r\n  handleClickOutsideModal = e => {\r\n    if (e.target.matches('.modal-overlay')) {\r\n      this.props.closeModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      closeModal,\r\n      findPrevPhoto,\r\n      findNextPhoto,\r\n      hasPrevPhoto,\r\n      hasNextPhoto,\r\n      src,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div className=\"modal-overlay\" onClick={this.handleClickOutsideModal}>\r\n        <div className=\"modal-window\">\r\n          <div className=\"modal-body\">\r\n            <img src={src} alt=\"Image: Fake photo\" />\r\n            <a\r\n              href=\"#\"\r\n              className=\"modal-close\"\r\n              onClick={closeModal}\r\n              onKeyDown={this.handleKeyDown}\r\n            >\r\n              &times;\r\n            </a>\r\n            {hasPrevPhoto && (\r\n              <a\r\n                href=\"#\"\r\n                className=\"modal-prev\"\r\n                onClick={findPrevPhoto}\r\n              >\r\n                &lsaquo;\r\n              </a>\r\n            )}\r\n            {hasNextPhoto && (\r\n              <a\r\n                href=\"#\"\r\n                className=\"modal-next\"\r\n                onClick={findNextPhoto}\r\n              >\r\n                &rsaquo;\r\n              </a>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nGalleryModal.propTypes = {\r\n  closeModal: PropTypes.func.isRequired,\r\n  findPrevPhoto: PropTypes.func.isRequired,\r\n  findNextPhoto: PropTypes.func.isRequired,\r\n  hasPrevPhoto: PropTypes.bool.isRequired,\r\n  hasNextPhoto: PropTypes.bool.isRequired,\r\n  src: PropTypes.string,\r\n};\r\n\r\nGalleryModal.defaultProps = {\r\n  src: 'https://via.placeholder.com/600/92c952',\r\n};\r\n","import GalleryModal from './GalleryModal';\r\n\r\nexport default GalleryModal;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Button.scss';\r\n\r\nexport default class Button extends Component {\r\n  render() {\r\n    const { text, onAction } = this.props;\r\n    return (\r\n      <button className=\"gallery-button\" onClick={onAction}>\r\n        {text}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  onAction: PropTypes.func.isRequired,\r\n};\r\n\r\nButton.defaultProps = {\r\n  text: 'Click me!',\r\n};\r\n","import Button from './Button';\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Button from '../Button';\r\nimport './Album.scss';\r\n\r\nexport default class Album extends Component {\r\n  render() {\r\n    const { data, closeAlbum, openModal } = this.props;\r\n    return <Tiles images={data} onClose={closeAlbum} onOpen={openModal} />;\r\n  }\r\n}\r\n\r\n// сетка фотографий + кнопка \"Back\"\r\nclass Tiles extends Component {\r\n  renderImageContent(arr) {\r\n    if (arr) {\r\n      return arr.map(({ url, id }, index) => (\r\n        <Tile image={url} key={id} id={index} onOpen={this.props.onOpen} />\r\n      ));\r\n    }\r\n  }\r\n  render() {\r\n    const { images, onClose } = this.props;\r\n    const tiles = this.renderImageContent(images);\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"back-button\">\r\n          <Button text={'Back'} onAction={onClose} />\r\n        </div>\r\n        <section className=\"tiles\">{tiles}</section>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\n// фотография\r\nclass Tile extends Component {\r\n  state = {\r\n    mouseOver: false,\r\n  };\r\n\r\n  mouseEnter = e => {\r\n    e.preventDefault();\r\n    if (!this.state.mouseOver) {\r\n      this.setState({\r\n        mouseOver: true,\r\n      });\r\n    }\r\n  };\r\n\r\n  mouseLeave = e => {\r\n    e.preventDefault();\r\n    if (this.state.mouseOver) {\r\n      this.setState({\r\n        mouseOver: false,\r\n      });\r\n    }\r\n  };\r\n\r\n  clickHandler = e => {\r\n    e.preventDefault();\r\n    this.props.onOpen(this.props.id);\r\n  };\r\n\r\n  render() {\r\n    const { image } = this.props;\r\n\r\n    return (\r\n      <div className=\"tile\">\r\n        <img\r\n          onMouseEnter={this.mouseEnter}\r\n          onMouseLeave={this.mouseLeave}\r\n          onClick={this.clickHandler}\r\n          src={image}\r\n          alt=\"Image: Fake photo\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAlbum.propTypes = {\r\n  closeAlbum: PropTypes.func.isRequired,\r\n  data: PropTypes.array,\r\n  openModal: PropTypes.func.isRequired,\r\n};\r\n\r\nTiles.propTypes = {\r\n  images: PropTypes.array,\r\n  onClose: PropTypes.func.isRequired,\r\n  onOpen: PropTypes.func.isRequired,\r\n};\r\n\r\nTile.propTypes = {\r\n  image: PropTypes.string,\r\n  onOpen: PropTypes.func.isRequired,\r\n  id: PropTypes.number,\r\n};\r\n\r\nTile.defaultProps = {\r\n  image: 'https://via.placeholder.com/600/92c952',\r\n};\r\n","import Album from './Album';\r\n\r\nexport default Album;\r\n","import ErrorIndicator from './ErrorIndicator';\r\n\r\nexport default ErrorIndicator;\r\n","import React from 'react';\r\nimport './ErrorIndicator.scss';\r\n\r\nconst ErrorIndicator = () => (\r\n  <div className=\"error-indicator\">\r\n    <div className=\"loadingio-spinner-magnify-xvi2eomm9dk\">\r\n      <div className=\"ldio-djr5te9pz2p\">\r\n        <div>\r\n          <div>\r\n            <div></div>\r\n            <div></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div className=\"error-message\">\r\n      <div>Something has gone wrong!</div>\r\n      <div>(but we already sent our developers to fix it)</div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default ErrorIndicator;\r\n","import App from './App';\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport FakeApiService from '../../services/service';\r\nimport GalleryModal from '../GalleryModal';\r\nimport Album from '../Album';\r\nimport Button from '../Button';\r\nimport ErrorIndicator from '../ErrorIndicator';\r\nimport './App.scss';\r\n\r\nexport default class App extends Component {\r\n  _userId = 1;\r\n\r\n  state = {\r\n    albums: null,\r\n    photos: null,\r\n    countPhotos: null,\r\n    currentPhotoIndex: null,\r\n    isOpenModal: false,\r\n    isOpenAlbum: false,\r\n    error: null,\r\n  };\r\n\r\n  fakeApiService = new FakeApiService();\r\n\r\n  // обновляем плитку альбомов\r\n  updateAlbumTiles = () => {\r\n    this.fakeApiService\r\n      .getAllAlbums(this._userId)\r\n      .then(albums => this.setState({ albums }))\r\n      .catch(() => this.setState({ error: true }));\r\n  };\r\n\r\n  // обновляем список фотографий альбома\r\n  updatePhotosList = albumId => {\r\n    this.fakeApiService\r\n      .getAllPhotos(albumId)\r\n      .then(photos => this.setState({ photos }))\r\n      .catch(() => this.setState({ error: true }));\r\n  };\r\n\r\n  // обновляем количество фотографий в альбоме\r\n  updateCountPhotos = albumId => {\r\n    this.fakeApiService\r\n      .getCountPhotos(albumId)\r\n      .then(count => this.setState({ countPhotos: count }))\r\n      .catch(() => this.setState({ error: true }));\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.updateAlbumTiles();\r\n  }\r\n\r\n  // рендер сетки альбомов\r\n  renderAlbumTiles(tiles) {\r\n    if (tiles) {\r\n      return tiles.map(({ src, id, title, countPhotos }) => (\r\n        <div className=\"album\" key={id}>\r\n          <img\r\n            className=\"cover-image\"\r\n            src={src}\r\n            key={id}\r\n            alt=\"Image: cover image\"\r\n          />\r\n          <div className=\"album-info\">\r\n            <span>\r\n              <strong>Album: </strong>\r\n              {title}\r\n            </span>\r\n            <span>\r\n              <strong>Count: </strong>\r\n              {countPhotos}\r\n            </span>\r\n          </div>\r\n          <div className=\"button-block\">\r\n            <Button text={'Аlbum'} onAction={() => this.openAlbum(id)} />\r\n            <Button text={'Preview'} onAction={() => this.openModal(id)} />\r\n          </div>\r\n        </div>\r\n      ));\r\n    }\r\n  }\r\n\r\n  // функция открытия альбома\r\n  openAlbum = id => {\r\n    this.updatePhotosList(id);\r\n    this.setState({\r\n      isOpenAlbum: true,\r\n    });\r\n  };\r\n\r\n  // функция открытия модального окна\r\n  openModal = id => {\r\n    this.updatePhotosList(id);\r\n    this.setState({\r\n      currentPhotoIndex: id,\r\n      isOpenModal: true,\r\n    });\r\n  };\r\n\r\n  // функция открытия модального окна внутри альбома\r\n  openModalInsideAlbum = id => {\r\n    this.setState({\r\n      currentPhotoIndex: id,\r\n      isOpenModal: true,\r\n    });\r\n  };\r\n\r\n  // функция закрытия альбома\r\n  closeAlbum = () => {\r\n    this.setState({\r\n      photos: null,\r\n      currentPhotoIndex: null,\r\n      isOpenAlbum: false,\r\n    });\r\n  };\r\n\r\n  // функция закрытия модального окна\r\n  closeModal = () => {\r\n    this.setState({\r\n      isOpenModal: false,\r\n    });\r\n  };\r\n\r\n  // функция перелистывания фотографий назад\r\n  findPrevPhoto = e => {\r\n    e.preventDefault();\r\n    this.setState(({ currentPhotoIndex }) => ({\r\n      currentPhotoIndex: currentPhotoIndex - 1,\r\n    }));\r\n  };\r\n\r\n  // функция перелистывания фотографий вперед\r\n  findNextPhoto = e => {\r\n    e.preventDefault();\r\n    this.setState(({ currentPhotoIndex }) => ({\r\n      currentPhotoIndex: currentPhotoIndex + 1,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      albums,\r\n      photos,\r\n      currentPhotoIndex,\r\n      isOpenModal,\r\n      isOpenAlbum,\r\n      error,\r\n    } = this.state;\r\n\r\n    // сообщение об ошибке\r\n    const errorMessage = error ? <ErrorIndicator /> : null;\r\n\r\n    // массив всех альбомов пользователя\r\n    const albumItems = this.renderAlbumTiles(albums);\r\n\r\n    // модальное окно со всеми фотографиями альбома\r\n    const modal =\r\n      isOpenModal && photos ? (\r\n        <GalleryModal\r\n          closeModal={this.closeModal}\r\n          findPrevPhoto={this.findPrevPhoto}\r\n          findNextPhoto={this.findNextPhoto}\r\n          hasPrevPhoto={currentPhotoIndex > 0}\r\n          hasNextPhoto={currentPhotoIndex + 1 < photos.length}\r\n          src={photos[currentPhotoIndex].url}\r\n        />\r\n      ) : null;\r\n\r\n    // содержимое альбома со всеми фотографиями\r\n    const album =\r\n      isOpenAlbum && photos ? (\r\n        <React.Fragment>\r\n          <Album\r\n            closeAlbum={this.closeAlbum}\r\n            openModal={this.openModalInsideAlbum}\r\n            data={photos}\r\n          />\r\n          {modal}\r\n        </React.Fragment>\r\n      ) : null;\r\n\r\n    // сетка со всеми альбомами пользователя\r\n    const albumTiles = !isOpenAlbum ? (\r\n      <React.Fragment>\r\n        <h1>Photo Gallery</h1>\r\n        <section className=\"gallery-grid\">{albumItems}</section>\r\n        {modal}\r\n      </React.Fragment>\r\n    ) : null;\r\n\r\n    return (\r\n      <section className=\"gallery-container\">\r\n        {albumTiles}\r\n        {album}\r\n        {errorMessage}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.querySelector('.gallery')\r\n);\r\n"],"sourceRoot":""}